Docker Threat Modeling
Given Docker's system components and the STRIDE framework, identify five potential threats that may arise.

1. Spoofing:
 Docker Hub authentication vulnerabilities may allow attackers to impersonate legitimate users, compromising container images and introducing malicious code

2. Tampering:
 Unauthorized access to Docker images or containers could lead to tampering with critical files, altering configurations, or injecting malicious code, compromising the integrity of the system

3. Information Disclosure:
  Weaknesses in Docker networking could potentially lead to the disclosure of sensitive information between containers or from the host system, exposing critical data to unauthorized entities 

4. Denial of Service
 Resource exhaustion attacks on Docker hosts or containers may result in a denial of service, impacting the availability of services and disrupting normal system operations

5. Elevation of Privilege:
 Docker daemon vulnerabilities might be exploited to escalate privileges, enabling unauthorized access to sensitive resources and compromising the overall system security


Kubernetes Threat Modeling
Given Kubernetes' system components and the STRIDE framework, identify five potential threats that may arise.

1.Spoofing Identity:
Kubernetes API server vulnerabilities may lead to unauthorized access, allowing attackers to spoof their identity and gain control over the cluster [1].

2.Tampering:
Compromised container images or unauthorized access to Kubernetes manifests could result in tampering with configurations, introducing malicious code, and compromising the integrity of the entire cluster [6].

3.Elevation of Privilege:
Vulnerabilities in Kubernetes RBAC (Role-Based Access Control) or insufficient pod security policies might be exploited, leading to the elevation of privileges and unauthorized access to sensitive resources [3].

4.Information Disclosure:
Weaknesses in the Kubernetes networking model could potentially expose sensitive information between pods or leak critical data, leading to information disclosure [5].

5.Denial of Service (DoS):
Resource exhaustion attacks on Kubernetes components, such as the kube-apiserver or etcd, may result in a denial of service, impacting the availability of services within the cluster [4].

Docker-bench Run Results and Analysis
From the failed findings, select and document 3 findings from the Docker-bench results that you want to harden based on the 5 attack surface areas you identified in Step 1. At least 1 of the 3 hardened findings should be different from the ones mentioned in the exercise (i.e. 5.10, 5.14, and 5.22).

- 2.2 Ensure network traffic is restricted between containers on the default bridge (Automated)
By default, all network traffic is allowed between containers on the same host on the default network bridge. If not
desired, restrict all inter-container communication. Link specific containers together that require communication.
Alternatively, you can create custom network and only join containers that need to communicate to that custom
network.

Remediation: To resolve this, the docker daemon should be configured with icc disabled. Hence, adding the setting
"icc": false to the docker daemon json file.

- 2.15 Ensure live restore is enabled (Automated)
The --live-restore option enables full support of daemon-less containers within Docker. It ensures that Docker does not
stop containers on shutdown or restore and that it properly reconnects to the container when restarted.

Remediation: To resolve this, the docker daemon should be configured with live-restore set to true. Hence, adding the
setting "live-restore": true

- 4.5 Ensure Content trust for Docker is Enabled (Automated)
Content trust provides the ability to use digital signatures for data sent to and received from remote Docker registries.
These signatures allow client-side verification of the identity and the publisher of specific image tags and ensures
the provenance of container images.

Remediation: To resolve this, the DOCKER_CONTENT_TRUST value should be set to 1.
